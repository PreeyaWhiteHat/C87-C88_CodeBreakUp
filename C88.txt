Step 1

npm install react-native-google-books

In screens/BookRequestScreen.js 

import {BookSearch} from 'react-native-google-books';

Add in state in constructor()

Imagelink: '',
      dataSource:"",
      showFlatlist: false


async getBooksFromApi (bookName){
  this.setState({bookName:bookName})
    if (bookName.length >2){

    var books = await BookSearch.searchbook(bookName,'AIzaSyASyOjOtJla-X-b3io2eLoaUc_bIRFSIIc')
    this.setState({
      dataSource:books.data,
      showFlatlist:true
    })

}
  }


--------------------------------------

Step 2

 renderItem = ( {item, i} ) =>{
   console.log("image link ");

  let obj ={
    title:item.volumeInfo.title,
    selfLink: item.selfLink,
    buyLink: item.saleInfo.buyLink,
    imageLink:item.volumeInfo.imageLinks
  }


   return (
     <TouchableHighlight
     style={{ alignItems: "center",
    backgroundColor: "#DDDDDD",
    padding: 10,

    width: '90%',
    }}
      activeOpacity={0.6}
      underlayColor="#DDDDDD"
      onPress={()=>{
        this.setState({
          showFlatlist:false,
          bookName:item.volumeInfo.title,

        })}
    }
      bottomDivider
      >
       <Text> {item.volumeInfo.title} </Text>

     </TouchableHighlight>


   )
 }
-----------------------------------
step 3

 else
    {
    return(
      // Form screen
        <View style={{flex:1}}>
          <MyHeader title="Request Book" navigation ={this.props.navigation}/>

          <View>

          <TextInput
            style ={styles.formTextInput}
            placeholder={"enter book name"}
            onChangeText={text => this.getBooksFromApi(text)}
            onClear={text => this.getBooksFromApi('')}
            value={this.state.bookName}
          />

      {  this.state.showFlatlist ?

        (  <FlatList
        data={this.state.dataSource}
        renderItem={this.renderItem}
        enableEmptySections={true}
        style={{ marginTop: 10 }}
        keyExtractor={(item, index) => index.toString()}
      /> )
      :(
        <View style={{alignItems:'center'}}>
        <TextInput
          style ={[styles.formTextInput,{height:300}]}
          multiline
          numberOfLines ={8}
          placeholder={"Why do you need the book"}
          onChangeText ={(text)=>{
              this.setState({
                  reasonToRequest:text
              })
          }}
          value ={this.state.reasonToRequest}
        />
        <TouchableOpacity
          style={styles.button}
          onPress={()=>{ this.addRequest(this.state.bookName,this.state.reasonToRequest);
          }}
          >
          <Text>Request</Text>
        </TouchableOpacity>
        </View>
      )
    }
            </View>
        </View>
    )
  }
}
}
------------------------------------------------
Step 4
In addRequest() function

 var books = await BookSearch.searchbook(bookName,'AIzaSyASyOjOtJla-X-b3io2eLoaUc_bIRFSIIc')
  "image_link" : books.data[0].volumeInfo.imageLinks.smallThumbnail
------------------------------------
step 5

In screens/BookDonateScreen.js
In renderItem ()

 leftElement ={<Image
          style={{height:50,width:50}}
           source={{
          uri: item.image_link,
          }}
        />}

